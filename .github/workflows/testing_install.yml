name: test installation
on:
  push:
    branches:
      - main

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  test_install:
    defaults:
      run:
        shell: bash
    if: github.repository == 'nilearn/nilearn'
    name: ${{ matrix.os }} with Python ${{ matrix.python-version }} and latest package
      versions
    runs-on: ${{ matrix.os }}
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: start-measurement
      - name: Checkout nilearn
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies for building Nilearn
        run: 'set -e

          python -m pip install --upgrade pip

          pip install --prefer-binary build

          '
        shell: bash {0}
      - id: measurement-4
        name: Record Measurement After Install dependencies for building Nilearn
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install dependencies for building Nilearn
          task: get-measurement
      - name: Build Nilearn
        run: 'set -e

          python -m build

          '
        shell: bash {0}
      - id: measurement-6
        name: Record Measurement After Build Nilearn
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Build Nilearn
          task: get-measurement
      - name: Install Nilearn from wheel & check installation
        run: 'set -e

          pip install dist/nilearn-*-py3-none-any.whl

          python -c "import nilearn"

          '
        shell: bash {0}
      - id: measurement-8
        name: Record Measurement After Install Nilearn from wheel & check installation
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          label: Install Nilearn from wheel & check installation
          task: get-measurement
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@v4
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption-${{
          github.run_id }}.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption-${{ github.run_id }}.json
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - '3.9'
